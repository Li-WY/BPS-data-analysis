# Template config for BPS calling


# This block specifies the 'experiments', so each set of things you are 
# attempting to BPS. This is usually just one.
experiments:
  this-example-experiment: # this is the experiment name!
    target-fasta: 'config/lasso428targetOrfsAndDonorBarcodes.fasta'
      # this is the target sequences, if specified it will align it back to
      # those, but this is an optional parameter
    pools: # what pools are used to achieve this? 
      - 'all-mix'


# This block specifies the pools, so each distinct Nanopore library as was
# run on the flowcell
pools:
  all-mix: # This is a unique name of that pool
    bps-knowncodes: 'config/bps_barcoders_220302.csv' 
      # Then the canonical positioning barcodes and where they are at
    starcode-args: '-r 10 -d 6' 
      # Some parameters for using starcode to cluster the barcodes up
    demux-sheet: 'config/demux-sheet-example.tsv'
      # this is a sheet specifying the demultiplexing from within runs, and
      # how to combine sample data across runs 
    plasmids: # This specifies what plasmid backbones are in the pool
      - '1064x937'
      - '438x937'
      - '439x937'
      # These must match the plasmid IDs in the section below, and in the
      # various FASTA files that are used as signatures or to trim the
      # sequence using SAMLAMI, etc
    filter-out: 'config/bps_filter_out.fasta'
      # Optional, this is to filter out any junk before assembling


# This block specifies the details of each plasmid listed above
plasmids: 

  1064x937:
    samlami: 
        # This script is used to trim sequence initially, so here are the 
        # arguments of the script for this plasmid:
      - order: 0 # which one to apply first? Here, left first
        ref: 'config/trim_left_short.fasta' 
          # This is the sequence to trim off the left side
        arg: '--cut-on-left'
          # Specifying that for the script! This is directly added in the call!
      - order: 1
        ref: 'config/trim_right_short.fasta'
          # This is the sequence to trim off the left side
        arg: '--cut-on-right'
          # Cut on right!
    itermae-barcode: 'config/itermae_BC_937.yml' 
      # This is itermae config that extracts the well-specific barcode from
      # barcoding plasmid background 937
    itermae-payload: 'config/itermae_payload_1064.yml'
      # This is itermae config that extracts the payload that you're trying to
      # BPS, from plasmid backbone 1064
    signature: 'config/plasmid_signatures.fasta'
      # This includes a "signature" sequence that uniquely identifies this 
      # plasmid from other plasmid backbones in the BPS experiment.
      # Note that the FASTA ID must exactly match the name above in 'plasmids'

  438x937:
    samlami: 
      - order: 0
        ref: 'config/trim_left_short.fasta'
        arg: '--cut-on-left'
      - order: 1
        ref: 'config/trim_right_short.fasta'
        arg: '--cut-on-right'
    itermae-barcode: 'config/itermae_BC_937.yml'
    itermae-payload: 'config/itermae_payload_438or439.yml'
    signature: 'config/plasmid_signatures.fasta'

  439x937:
    samlami: 
      - order: 0
        ref: 'config/trim_left_short.fasta'
        arg: '--cut-on-left'
      - order: 1
        ref: 'config/trim_right_short.fasta'
        arg: '--cut-on-right'
    itermae-barcode: 'config/itermae_BC_937.yml'
    itermae-payload: 'config/itermae_payload_438or439.yml'
    signature: 'config/plasmid_signatures.fasta'

# Here now we specific each Nanopore run used
runs:

  20221012_1434_MN21180_FAT60123_2f1f2cff: # Run ID, must match above
    pool: 'all-mix'
      # What pool has been run on this run! You can only run one pool, because
      # if you mix two pools then it becomes another pool!
    fastq: '/archive/l/seq_data/bps/20221012_1434_MN21180_FAT60123_2f1f2cff/basecalling/output/demuxed.fastq.gz'
      # Where is the fastq, or more properly fastq.gz ?
      # This must already be demultiplexed (or not!) by Guppy
    flowcell: 'FLO-MIN112' # What flowcell - I don't think this actually used
    medaka-model: 'r104_e81_sup_variant_g610' 
      # The medaka configuration to use
    filter-out: 'config/bps_filter_out.fasta'
      #  You can specify it on run level too, this is redundant with pool spec

  20221111_1544_MN21180_FAT59932_c3bac6f0:
    pool: 'all-mix'
    fastq: '/archive/l/seq_data/bps/20221111_1544_MN21180_FAT59932_c3bac6f0/basecalling/output/demuxed.fastq.gz'
    flowcell: 'FLO-MIN112'
    medaka-model: 'r104_e81_sup_variant_g610'

  20221113_1507_MN24328_FAT59932_3e555f90:
    pool: 'all-mix'
    fastq: '/archive/l/seq_data/bps/20221113_1507_MN24328_FAT59932_3e555f90/basecalling/output/demuxed.fastq.gz'
    flowcell: 'FLO-MIN112'
    medaka-model: 'r104_e81_sup_variant_g610'


