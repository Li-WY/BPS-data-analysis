# BPS config file version 0.10-rc 

pools:

  idt_op1_single_s1:
    plasmids:
    - 1071-937-op
    demux: |
      unclassified	idt_op1_s1

  idt_op1_single_s6:
    plasmids:
    - 1071-937-op
    demux: |
      unclassified	idt_op1_s6

  idt_op1_single_s7:
    plasmids:
    - 1071-937-op
    demux: |
      unclassified	idt_op1_s7

  idt_op1_single_s9:
    plasmids:
    - 1071-937-op
    demux: |
      unclassified	idt_op1_s9

  idt_op1_single_s8:
    plasmids:
    - 1071-937-op
    demux: |
      unclassified	idt_op1_s8

  idt_op1_single_s10:
    plasmids:
    - 1071-937-op
    demux: |
      unclassified	idt_op1_s10

  idt_op1_pool_I:
    plasmids:
    - 1071-937-op
    demux: |
      barcode02	idt_op1_s2
      barcode03	idt_op1_s3
      barcode04	idt_op1_s4
      barcode05	idt_op1_s5
      barcode07	idt_op1_s7
      barcode08	idt_op1_s8
      barcode09	idt_op1_s9
      barcode10	idt_op1_s10

  idt_op2_pool_I:
    plasmids:
    - 1071-937-op
    demux: |
      barcode10	idt_op2_s1
      barcode11	idt_op2_s2
      barcode12	idt_op2_s3
      barcode13	idt_op2_s4
      barcode14	idt_op2_s5
      barcode15	idt_op2_s6
      barcode16	idt_op2_s7
      barcode17	idt_op2_s8
      barcode18	idt_op2_s9
      barcode19	idt_op2_s10

  twist_op_s1-20:
    plasmids:
    - 1064-937-op
    demux: |
      barcode01	twist_op_s1
      barcode02	twist_op_s2
      barcode03	twist_op_s3
      barcode04	twist_op_s4
      barcode05	twist_op_s5
      barcode06	twist_op_s6
      barcode07	twist_op_s7
      barcode08	twist_op_s8
      barcode09	twist_op_s9
      barcode10	twist_op_s10
      barcode11	twist_op_s11
      barcode12	twist_op_s12
      barcode13	twist_op_s13
      barcode14	twist_op_s14
      barcode15	twist_op_s15
      barcode16	twist_op_s16
      barcode17	twist_op_s17
      barcode18	twist_op_s18
      barcode19	twist_op_s19
      barcode20	twist_op_s20

  twist_op_s1-35:
    plasmids:
    - 1064-937-op
    demux: |
      barcode01	twist_op_s1
      barcode02	twist_op_s2
      barcode03	twist_op_s3
      barcode04	twist_op_s4
      barcode05	twist_op_s5
      barcode06	twist_op_s6
      barcode07	twist_op_s7
      barcode08	twist_op_s8
      barcode09	twist_op_s9
      barcode10	twist_op_s10
      barcode11	twist_op_s11
      barcode12	twist_op_s12
      barcode13	twist_op_s13
      barcode14	twist_op_s14
      barcode15	twist_op_s15
      barcode16	twist_op_s16
      barcode17	twist_op_s17
      barcode18	twist_op_s18
      barcode19	twist_op_s19
      barcode20	twist_op_s20
      barcode21	twist_op_s21
      barcode22	twist_op_s22
      barcode23	twist_op_s23
      barcode24	twist_op_s24
      barcode25	twist_op_s25
      barcode26	twist_op_s26
      barcode27	twist_op_s27
      barcode28	twist_op_s28
      barcode29	twist_op_s29
      barcode30	twist_op_s30
      barcode31	twist_op_s31
      barcode32	twist_op_s32
      barcode33	twist_op_s33
      barcode34	twist_op_s34
      barcode35	twist_op_s35

  twist_op_s36-72:
    plasmids:
    - 1064-937-op
    demux: |
      barcode36	twist_op_s36
      barcode37	twist_op_s37
      barcode38	twist_op_s38
      barcode39	twist_op_s39
      barcode40	twist_op_s40
      barcode41	twist_op_s41
      barcode42	twist_op_s42
      barcode43	twist_op_s43
      barcode44	twist_op_s44
      barcode45	twist_op_s45
      barcode46	twist_op_s46
      barcode47	twist_op_s47
      barcode48	twist_op_s48
      barcode49	twist_op_s49
      barcode50	twist_op_s50
      barcode51	twist_op_s51
      barcode52	twist_op_s52
      barcode53	twist_op_s53
      barcode54	twist_op_s54
      barcode55	twist_op_s55
      barcode56	twist_op_s56
      barcode57	twist_op_s57
      barcode58	twist_op_s58
      barcode59	twist_op_s59
      barcode60	twist_op_s60
      barcode61	twist_op_s61
      barcode62	twist_op_s62
      barcode63	twist_op_s63
      barcode64	twist_op_s64
      barcode65	twist_op_s65
      barcode66	twist_op_s66
      barcode67	twist_op_s67
      barcode68	twist_op_s68
      barcode69	twist_op_s69
      barcode70	twist_op_s70
      barcode71	twist_op_s71
      barcode72	twist_op_s72

  twist_op_s1-30:
    plasmids:
      - 1064-937-op
    demux: |
      barcode25	twist_oligos_1
      barcode26	twist_oligos_2
      barcode27	twist_oligos_3
      barcode28	twist_oligos_4
      barcode29	twist_oligos_5
      barcode30	twist_oligos_6
      barcode31	twist_oligos_7
      barcode32	twist_oligos_8
      barcode33	twist_oligos_9
      barcode34	twist_oligos_10
      barcode35	twist_oligos_11
      barcode36	twist_oligos_12
      barcode37	twist_oligos_13
      barcode38	twist_oligos_14
      barcode39	twist_oligos_15
      barcode40	twist_oligos_16
      barcode73	twist_oligos_17
      barcode74	twist_oligos_18
      barcode75	twist_oligos_19
      barcode76	twist_oligos_20
      barcode77	twist_oligos_21
      barcode78	twist_oligos_22
      barcode79	twist_oligos_23
      barcode80	twist_oligos_24
      barcode81	twist_oligos_25
      barcode82	twist_oligos_26
      barcode83	twist_oligos_27
      barcode84	twist_oligos_28
      barcode85	twist_oligos_29
      barcode86	twist_oligos_30

plasmids:

  1071-937-op:
    signature: 'tctctcttcattcagggtcatgagaggcacgccattcaaggggagaagtgagatcggtaccCAGGCGGGCTCACCTCCGTGtggGCGGCCATggcgcgcc'

  1064-937-op:
    signature: 'gggagaagtgagatcggtaccGGGGCCACTAGGGACAGGATtggGCGGCCATCGAGGGCTAGAATTACCTACCGGCCTCCACCATGCCTGCGggcgcgcc'

runs:

  20220204_1659_MN21180_AHY362_20fff81e:
    fastq: '/archive/l/seq_data/bps/20220204_1659_MN21180_AHY362_20fff81e/basecalling/output/demuxed.fastq.gz'
    flowcell: 'FLO-FLG001'
    pool: 'idt_op1_single_s1'
    medaka-model: 'r941_min_sup_g507'
    header-parse: 'guppy'

  20220210_2158_MN21180_AHV186_47bfe197:
    fastq: '/archive/l/seq_data/bps/20220210_2158_MN21180_AHV186_47bfe197/basecalling/output/demuxed.fastq.gz'
    flowcell: 'FLO-FLG001'
    pool: 'idt_op1_single_s6'
    medaka-model: 'r941_min_sup_g507'
    header-parse: 'guppy'

  20220216_2034_MN21180_ahy372_ed3cdbcb:
    fastq: '/archive/l/seq_data/bps/20220216_2034_MN21180_ahy372_ed3cdbcb/basecalling/output/demuxed.fastq.gz'
    flowcell: 'FLO-FLG001'
    pool: 'idt_op1_single_s7'
    medaka-model: 'r941_min_sup_g507'
    header-parse: 'guppy'

  20220221_1007_MN21180_aig649_5975f02f:
    fastq: '/archive/l/seq_data/bps/20220221_1007_MN21180_aig649_5975f02f/basecalling/output/demuxed.fastq.gz'
    flowcell: 'FLO-FLG001'
    pool: 'idt_op1_single_s8'
    medaka-model: 'r941_min_sup_g507'
    header-parse: 'guppy'

  20220217_1545_MN21180_aib485_85e73edd:
    fastq: '/archive/l/seq_data/bps/20220217_1545_MN21180_aib485_85e73edd/basecalling/output/demuxed.fastq.gz'
    flowcell: 'FLO-FLG001'
    pool: 'idt_op1_single_s9'
    medaka-model: 'r941_min_sup_g507'
    header-parse: 'guppy'

  20220222_1011_MN21180_aht720_3d126414:
    fastq: '/archive/l/seq_data/bps/20220222_1011_MN21180_aht720_3d126414/basecalling/output/*.fastq.gz'
    flowcell: 'FLO-FLG001'
    pool: 'idt_op1_single_s10'
    medaka-model: 'r941_min_sup_g507'
    header-parse: 'guppy'


  20220219_2042_MN21180_FAK29156_8060e67d:
    fastq: '/archive/l/seq_data/bps/20220219_2042_MN21180_FAK29156_8060e67d/basecalling/output/demuxed.fastq.gz'
    flowcell: 'FLO-MIN106D'
    pool: 'idt_op1_pool_I'
    medaka-model: 'r941_min_sup_g507'
    header-parse: 'modified'

  20220220_1413_MN21180_FAK29156_1d6cb4e1:
    fastq: '/archive/l/seq_data/bps/20220220_1413_MN21180_FAK29156_1d6cb4e1/basecalling/output/demuxed.fastq.gz'
    flowcell: 'FLO-MIN106D'
    pool: 'idt_op1_pool_I'
    medaka-model: 'r941_min_sup_g507'
    header-parse: 'modified'

  20220505_1256_MN21180_FAT28805_36dcfc86:
    fastq: '/archive/l/seq_data/bps/20220505_1256_MN21180_FAT28805_36dcfc86/basecalling/output/demuxed.fastq.gz'
    flowcell: 'FLO-MIN112'
    pool: 'idt_op2_pool_I'
    medaka-model: 'r104_e81_sup_g610'
    header-parse: 'modified'

  20220506_1604_MN21180_FAT28805_e2260b2f:
    fastq: '/archive/l/seq_data/bps/20220506_1604_MN21180_FAT28805_e2260b2f/basecalling/output/demuxed.fastq.gz'
    flowcell: 'FLO-MIN112'
    pool: 'idt_op2_pool_I'
    medaka-model: 'r104_e81_sup_g610'
    header-parse: 'modified'

  20220810_1419_MN24357_FAT11143_dc331389:
    fastq: '/archive/l/seq_data/bps/20220810_1419_MN24357_FAT11143_dc331389/basecalling/output/demuxed.fastq.gz'
    flowcell: 'FLO-MIN112'
    pool: 'twist_op_s1-20'
    medaka-model: 'r104_e81_sup_g610'
    header-parse: 'modified'

  20220826_1442_MN24357_FAT60123_d777449a:
    fastq: '/archive/l/seq_data/bps/20220826_1442_MN24357_FAT60123_d777449a/basecalling/output/demuxed.fastq.gz'
    flowcell: 'FLO-MIN112'
    pool: 'twist_op_s1-35'
    medaka-model: 'r104_e81_sup_g610'
    header-parse: 'modified'

  20220928_1634_MN21180_FAT60123_fc2fcf63:
    fastq: '/archive/l/seq_data/bps/20220928_1634_MN21180_FAT60123_fc2fcf63/basecalling/output/demuxed.fastq.gz'
    flowcell: 'FLO-MIN112'
    pool: 'twist_op_s36-72'
    medaka-model: 'r104_e81_sup_g610'
    header-parse: 'modified'

  20220929_1648_MN21180_FAT60123_2c6fef82:
    fastq: '/archive/l/seq_data/bps/20220929_1648_MN21180_FAT60123_2c6fef82/basecalling/output/demuxed.fastq.gz'
    flowcell: 'FLO-MIN112'
    pool: 'twist_op_s36-72'
    medaka-model: 'r104_e81_sup_g610'
    header-parse: 'modified'

  20220930_1046_MN21180_FAU29365_e667d692:
    fastq: '/archive/l/seq_data/bps/20220930_1046_MN21180_FAU29365_e667d692/basecalling/output/demuxed.fastq.gz'
    flowcell: 'FLO-MIN112'
    pool: 'twist_op_s36-72'
    medaka-model: 'r104_e81_sup_g610'
    header-parse: 'modified'

  20221003_1553_MN21180_FAU29365_de37c928: 
    fastq: '/archive/l/seq_data/bps/20221003_1553_MN21180_FAU29365_de37c928/basecalling/output/demuxed.fastq.gz'
    flowcell: 'FLO-MIN112'
    pool: 'twist_op_s36-72'
    medaka-model: 'r104_e81_sup_g610'
    header-parse: 'modified'

  plasmidsaurus_PAQ18854:
    fastq: '/archive/l/seq_data/bps/20230625_plasmidsaurus/Li_*/*fastq.gz'
    flowcell: 'FLO-PRO114M'
    pool: 'twist_op_s1-30'
    medaka-model: 'r1041_e82_400bps_sup_v4.2.0'
    header-parse: 'guppy'


#####
#####
##### TODO conceptually rewrite so there's a top level ontology category of
##### 'assembly', so all the pre-assembly and assembly steps can be pooled
##### across 'experiments', which maybe should just be 'analyses' then
#####
#####

samlami-rec-bc: &samlami-rec-bc
  - arg: '--cut-on-left'
    ref: 'ctcaagcaaggttttcagtataatgttacatgcgtacacgcgtctgtacagaaaaaaaagaaaaatttgaaatataaataacgttcttaatactaacata'
    tail: 100
  - arg: '--cut-on-right'
    ref: 'ttgccctctctcttcattcagggtcatgagaggcacgccattcaaggggagaagtgagatcggtaccGGGGCCACTAGGGACAGGATtgg'
    head: 100

samlami-internal-1064: &samlami-internal-1064
  - arg: '--cut-on-left'
    ref: 'cgagGGTACCttgccctctctcttcattcagggtcatgagaggcacgccattcaaggggagaagtgagatcggtaccGGGGCCACTAGGGACAGGATtgg'
    tail: 100
  - arg: '--cut-on-right'
    ref: 'cacatatacctgccgttcactattatttagtgaaatgagatattatgatattttctgaattgtgattaaaaaggcaactttatgcccatgcaacagaaac'
    head: 100

samlami-internal-1071: &samlami-internal-1071
  - arg: '--cut-on-left'
    ref: 'cgagGGTACCttgccctctctcttcattcagggtcatgagaggcacgccattcaaggggagaagtgagatcggtaccGGGGCCACTAGGGACAGGATtgg'
    tail: 100
  - arg: '--cut-on-right'
    ref: 'atgtcacatctcgcagaactggttgccagtgcgaaggcggccattagccaggcgtcagatgttgccgcgttagataatgtgcgcgtcgaatatttgggta'
    head: 100

experiments: 

  twist-oligos-bc:
    pools:
      - 'twist_op_s1-20'
      - 'twist_op_s1-35'
      - 'twist_op_s36-72'
      - 'twist_op_s1-30'
    filter-out: 'nuconfig/filter-out-r6k-psc101-937.fasta'
    plasmids:
    - 1064-937-op
    extract-barcode:
      1064-937-op:
        samlami: *samlami-rec-bc
        itermae: 'nuconfig/itermae_BC_937.yaml'
        knowncodes: 'nuconfig/recipient-barcodes.fasta' 
    pre-assembly:
      samlami: *samlami-internal-1064
    assembly-method: msa
    post-assembly:
      cutoutdonor:
        itermae: 'nuconfig/itermae_payload_1064.yaml'
        target-fasta: 'nuconfig/ref_1100_oligos_220215.fasta'
        target-size: 'short'

  idt-oligo-bc:
    pools: 
      - 'idt_op1_single_s1'
      - 'idt_op1_single_s6'
      - 'idt_op1_single_s7'
      - 'idt_op1_single_s8'
      - 'idt_op1_single_s9'
      - 'idt_op1_single_s10'
      - 'idt_op2_pool_I'
      - 'idt_op1_pool_I'
    filter-out: 'nuconfig/filter-out-r6k-psc101-937.fasta'
    plasmids:
      - 1071-937-op
    extract-barcode:
      1071-937-op:
        samlami: *samlami-rec-bc
        itermae: 'nuconfig/itermae_BC_937.yaml'
        knowncodes: 'nuconfig/recipient-barcodes.fasta' 
    pre-assembly:
      samlami: *samlami-internal-1071
    assembly-method: msa
    post-assembly:
      cutoutdonor:
        itermae: 'nuconfig/itermae_payload_1071.yaml'
        target-fasta: 'nuconfig/ref_1100_oligos_220215.fasta'
        target-size: 'short'

